on:                    # Run the workflow for each of the following event:
  push:                # - A branch is pushed or updated.
  pull_request:        # - A pull-request is openned or updated.
  workflow_dispatch:   # - A manual run of the workflow is requested from the GitHub web interface.
  release:
    types: [created]   # - A release is created.

jobs:
  linux-build:
    name: Build and test on Linux
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      BBQUEUE_COMPILE_CHECKS: enabled
      BBQUEUE_RUNTIME_CHECKS: enabled
      BBQUEUE_STYLE_CHECKS: enabled
      BBQUEUE_CONTRACTS: enabled

    steps:
    - uses: actions/checkout@v2
    - uses: alire-project/setup-alire@v1
    - uses: reviewdog/action-setup@v1

    - name: Alire build
      run: cd 2022 && alr build --validation

    - name: Test Build
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd 2022
        status=0
        alr -q build > output.txt 2>&1 || status=$?
        cat output.txt
        cat output.txt | reviewdog -efm="%f:%l:%c: %m" -diff="git diff master" --reporter=github-pr-review
        # Check for errors
        if [ $status -ne 0 ]; then
           echo "ERROR: gprbuild returned $status"
           # This will cause the workflow to exit with $status
           bash -c "exit $status"
        fi
    - name: SPARK proof
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd 2022
        status=0
        alr gnatprove -j0 --level=4 --checks-as-errors -cargs -gnatef > output.txt 2>&1 || status=$?
        cat output.txt
        cat output.txt | reviewdog -efm="%f:%l:%c: %m" -diff="git diff master" --reporter=github-pr-review
        # Check for errors
        if [ $status -ne 0 ]; then
           echo "ERROR: gnatprove returned $status"
           # This will cause the workflow to exit with $status
           bash -c "exit $status"
        fi

    - run: ./2022/bin/day_01
